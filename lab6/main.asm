SSTACK	SEGMENT PARA STACK 'STACK'
		DW		128h DUP(0)
SSTACK	ENDS

EXTRN MENU : NEAR
EXTRN INPUT : NEAR
EXTRN UNSIGNED2 : NEAR
EXTRN SIGNED2 : NEAR
EXTRN UNSIGNED10 : NEAR
EXTRN SIGNED10 : NEAR
EXTRN UNSIGNED16 : NEAR
EXTRN SIGNED16 : NEAR

PUBLIC NEW_LINE, ENTRY

DSEG SEGMENT PARA PUBLIC 'DATA'
    FUNCS DW MENU, INPUT, UNSIGNED2, SIGNED2, UNSIGNED10, SIGNED10, UNSIGNED16, SIGNED16 ;ячейка памяти с меткой
    X DW 8
    ENTRY DB  '> Select item ', '$'
DSEG	ENDS

CSEG	SEGMENT PARA PUBLIC 'CODE'
		ASSUME CS:CSEG, DS:DSEG, SS:SSTACK

NEW_LINE PROC NEAR
    PUSH AX
    PUSH DX

    MOV AH,2
    MOV DL,10
    INT 21h
    MOV DL,13
    INT 21h

    POP DX
    POP AX
    RET
NEW_LINE ENDP

MAIN:
  MOV AX, DSEG
  MOV DS, AX
  CALL MENU; Вывод меню

ITEM:
  MOV AH,9
  MOV DX, OFFSET ENTRY
  INT 21h
  MOV AH,8; ввод символа без эха
  INT 21h

  MOV AH,2; печатаем введенную цифру
  MOV DL,AL
  INT 21h
  CALL NEW_LINE

  MOV BL,AL
  SUB BL,'0'; получаем индекс команды

CALLING:
  CMP BL,8
  JE EXIT ;переход если равно
	ADD BL,BL ;удваиваем цифру, потому что адрес двухбайтовый
	MOV BH,0
  CALL WORD PTR FUNCS[BX] ;косвеннная адресация
  JMP ITEM

EXIT:
  MOV AX, 4C00h
  INT 21h

CSEG	ENDS
END MAIN
